@page
@model Dictionarythesaurus.Pages.JoinedData.ListModel

@{
    ViewData["Title"] = "List";
}

<h1>List</h1>

<p>
    <a asp-page="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Dictionary[0].Word)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Dictionary) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Word)
            </td>
            <td>
                <a asp-page="./Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-page="./Details" asp-route-id="@item.Id">Details</a> |
                <a asp-page="./Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
</tbody>
</table>


<form>
   <p>
        Dictionary:
        <select asp-for="DictionaryItems" asp-items="Model.DictionaryItems">
              <option value="">All</option>
        </select>
         Title:
        <input type="text" asp-for="SearchString" />
               <input type="submit" value="Filter" />
   </p>
</form>


<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Definition[0].PartOfSpeech)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Definition[0].WordDefinition)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
       
@foreach (var item in Model.Definition) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.PartOfSpeech)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.WordDefinition)
            </td>
            <td>
                <a asp-page="./Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-page="./Details" asp-route-id="@item.Id">Details</a> |
                <a asp-page="./Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
